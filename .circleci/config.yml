version: 2.1

orbs:
  sfdx: circleci/salesforce-sfdx@2.2.0

jobs:
  set-up-enviroment:
    executor: sfdx/default
    steps:
      - checkout
      - sfdx/install

      # install / restore node modules - Start          		
      - restore_cache:
          key: -v1-node_modules

      - run:
          command: >
            npm install sfdx-node
          name: install sfdx-node

      # install / restore node modules - End		
      - save_cache:
          key: -v1-node_modules
          paths:
            - "node_modules"
      - run:
          command: |
            mkdir tmp
            mkdir tmp/artifacts
            mkdir tmp/cache
          name: create folder for artifacts 
      - run:
          command: |
            chmod +x scripts/deployment/*
          name: make scripts executable 

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ./
          # Must be relative path from root
          paths:
            - ./

  create-cache-checksum:
    executor: sfdx/default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./
          
      - run:
          command: >
            node ./scripts/deployment/node/writeChecksumFile.js
          name: writing file for checksum

      - persist_to_workspace:
          root: ./
          paths:
            - ./
            
            
  create-scratch-org:
    executor: sfdx/default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./

      - run:
          command: |
            pwd
            ls -la
          name: print Filesystem

      - sfdx/install


  # create / restore credential file
    # chaching - start
      - restore_cache:
          key: -v1-credentials-{{ checksum "checksum_24h.cache" }}

      - sfdx/auth:
          defaultusername: david@mcga.de

      - run:
          command: >
            sfdx force:limits:api:display -u david@mcga.de > tmp/artifacts/limitsBefore.txt
          name: print org limits before creation

      - run:
          command: >
            scripts/deployment/createNewScratchOrg.sh testScratchOrg
          name: create scratch org

      - run:
          command: >
            scripts/deployment/generateAuthFile.sh testScratchOrg > tmp/cache/authFile.json
          name: generate AuthFile

      - save_cache:
          key: -v1-credentials-{{ checksum "checksum_24h.cache" }}
          paths:
            - tmp/cache/authFile.json
       # chaching scratch org credentials - end 
        
      - run:
          command: >
            sfdx force:limits:api:display -u david@mcga.de > tmp/artifacts/limitsAfter.txt
          name: print org limits after creation

      - store_artifacts:
          path: tmp/artifacts/
          
      - run:
          command: >
            rm server.key
          name: Remove 'server.key' file
      
      - persist_to_workspace:
          root: ./
          paths:
            - ./
    

  push-code-and-run-tests:
    executor: sfdx/default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./
          
      - sfdx/install
      - sfdx/auth:
          defaultusername: david@mcga.de

      - run:
          command: |
            pwd
            ls -la > tmp/artifacts/ls-root.txt
            ls -la tmp/ > tmp/artifacts/ls-tmp.txt
            ls -la cache/ > tmp/artifacts/ls-cache.txt
          name: print Filesystem

      - run:
          command: >
            scripts/deployment/authorizeWithAuthFile.sh tempScratchOrg tmp/cache/authFile.json
          name: authorize via AuthFile

      - run:
          command: >
            sfdx force:source:push --targetusername tempScratchOrg --forceoverwrite --wait 60 > tmp/artifacts/DeploymentResults.txt
          name: SFDX Push Changes
          
      - run:
          command: >
            sfdx force:apex:test:run --targetusername tempScratchOrg --suitenames=MapUtilities --resultformat=human --codecoverage --wait 60 > tmp/artifacts/testResults.txt
          name: Run APEX Tests

      - run:
          command: >
            sfdx force:limits:api:display -u david@mcga.de > tmp/artifacts/limitsAfter.txt
          name: print org limits

      - store_artifacts:
          path: tmp/artifacts/          


workflows:
  basic-test:
    jobs:
      - set-up-enviroment
      - create-cache-checksum:
          requires:
            - set-up-enviroment
      - create-scratch-org:
          requires:
            - set-up-enviroment
            - create-cache-checksum
          filters:
            branches:
              ignore: master
      - push-code-and-run-tests:
          requires:
            - create-scratch-org
