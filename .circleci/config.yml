version: 2.1

orbs:
  sfdx: circleci/salesforce-sfdx@2.2.0

parameters:
  action:
    type: enum
    enum: [build, limits, test-sfdx-install]
    default: build

jobs:
  set-up-enviroment:
    executor: sfdx/default
    steps:
      - checkout
      - sfdx/install

      # install / restore node modules - Start          		
      - restore_cache:
          key: -v1-node_modules

      - run:
          command: >
            npm install sfdx-node
          name: install sfdx-node

      # install / restore node modules - End		
      - save_cache:
          key: -v1-node_modules
          paths:
            - "node_modules"
      - run:
          command: |
            mkdir tmp
            mkdir tmp/artifacts
            mkdir cache
          name: create folder for artifacts 

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ./
          # Must be relative path from root
          paths:
            - ./

  create-cache-checksum:
    executor: sfdx/default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./
          
      - run:
          command: >
            node ./scripts/deployment/node/writeChecksumFile.js
          name: writing file for checksum

      - persist_to_workspace:
          root: ./
          paths:
            - ./
            
  create-scratch-org:
    executor: sfdx/default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./

      - sfdx/install

  # create / restore credential file
    # chaching - start
      - restore_cache:
          key: -v1-credentials-{{ checksum "checksum_24h.cache" }}

      - sfdx/auth:
          defaultusername: david@mcga.de

      - run:
          command: >
            scripts/deployment/createNewScratchOrg.sh tempScratchOrg ./cache/org.credentials
          name: create scratch org

      - save_cache:
          key: -v1-credentials-{{ checksum "checksum_24h.cache" }}
          paths:
            - "cache"
       # chaching scratch org credentials - end 
        
      - store_artifacts:
          path: tmp/artifacts/
          
          
      - run:
          command: >
            rm server.key
          name: Remove 'server.key' file
      
      - persist_to_workspace:
          root: ./
          paths:
            - ./
    

  push-code-and-run-tests:
    executor: sfdx/default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./
          
      - sfdx/install
      - sfdx/auth:
          defaultusername: david@mcga.de

      - run:
          command: >
            node scripts/deployment/node/authorizeScratchOrgWithJwt.js tempScratchOrg
          name: authorize via JWT

      - run:
          command: >
            sfdx force:source:push --targetusername tempScratchOrg --forceoverwrite --wait 60 > tmp/artifacts/DeploymentResults.txt
          name: SFDX Push Changes
          
      - run:
          command: >
            sfdx force:apex:test:run --targetusername tempScratchOrg --suitenames=MapUtilities --resultformat=human --codecoverage --wait 60 > tmp/artifacts/testResults.txt
          name: Run APEX Tests

      - store_artifacts:
          path: tmp/artifacts/          



# Testjobs with docker-SFDX

  test-install-sfdx-auth:
    docker:
      #- image: cimg/node:19.1.0
      - image: salesforce/salesforcedx:7.178.0-slim
    steps:
      - run:
          command: |
            node --version
          name: print node version
      - run:
          command: |
            sfdx --version
          name: print sfdx version

      - run:
          command: |
            echo "$SFDX_JWT_KEY" | base64 --decode > server.key
            sfdx auth:jwt:grant --clientid $SFDX_CONSUMER_KEY --instanceurl https://login.salesforce.com --jwtkeyfile ./server.key --setdefaultdevhubusername --username david@mcga.de --setalias devHub

            rm server.key
          name: Authorize Devhub
      - run:
          command: |
            sfdx force:org:display --targetusername  devHub --verbose --json
          name: Print DevHub Auth Info

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ./
          # Must be relative path from root
          paths:
            - ./
      # - run:
      #     command: >
      #     name: Authorize Devhub
      #      david@mcga.de

  test-install-sfdx-print:
    docker:
      - image: salesforce/salesforcedx:7.178.0-slim
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./
      - run:
          command: >
            sfdx config:list
          name: print Config
      - run:
          command: >
            sfdx force:org:list
          name: print Org list

# -----------------------
# Utilities
# -----------------------



  print-org-limits:
    executor: sfdx/default
    parameters:
      filename:
        type: string
    steps:
      - sfdx/install
      - sfdx/auth:
          defaultusername: david@mcga.de
      - run:
          command: >
            sfdx force:limits:api:display -u david@mcga.de > << parameters.filename >>
          name: print org limits
      - store_artifacts:
          path: << parameters.filename >>  

  print-filesystem:
    executor: sfdx/default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./
      - run:
          command: |
            pwd
            ls -l
            ls cache -l
            ls tmp -l
          name: print Filesystem
# -----------------------
# Workflows
# -----------------------

workflows:
  install-sfdx:
    when:
      equal: [ test-sfdx-install, << pipeline.parameters.action >> ]
    jobs:
      - test-install-sfdx-auth
      - test-install-sfdx-print:
          requires:
            - test-install-sfdx-auth

  org-limits:
    when:
      equal: [ limits, << pipeline.parameters.action >> ]
    jobs:
      - print-org-limits:
          name: Org Limits
          filename: orgLimits.txt


  deploy-and-test:
    when:
      equal: [ build, << pipeline.parameters.action >> ]
    jobs:
      - print-org-limits:
          name: limitsBefore
          filename: orgLimits.txt
      - set-up-enviroment:
          requires:
            - limitsBefore
      - create-cache-checksum:
          requires:
            - set-up-enviroment
      - create-scratch-org:
          requires:
            - set-up-enviroment
            - create-cache-checksum
          filters:
            branches:
              ignore: master
      - push-code-and-run-tests:
          requires:
            - create-scratch-org
      - print-org-limits:
          name: limitsAfter
          filename: orgLimits.txt
          requires:
            - push-code-and-run-tests
